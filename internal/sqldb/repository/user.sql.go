// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const saveUser = `-- name: SaveUser :one
INSERT INTO users (
    id, email, full_name, created_at, updated_at
) VALUES (
    $1, $2, $3, $4, $5
) ON CONFLICT (id) DO UPDATE SET email = $2, full_name = $3, updated_at = NOW()
RETURNING id, email, full_name, created_at, updated_at
`

type SaveUserParams struct {
	ID        string
	Email     pgtype.Text
	FullName  pgtype.Text
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
}

func (q *Queries) SaveUser(ctx context.Context, arg SaveUserParams) (User, error) {
	row := q.db.QueryRow(ctx, saveUser,
		arg.ID,
		arg.Email,
		arg.FullName,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.FullName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
